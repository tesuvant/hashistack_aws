---
- name: init Vault
  shell: vault operator init -format json
  register: vault_init

- name: Parse output of vault init
  set_fact:
    vault_init_parsed: "{{ vault_init.stdout | from_json }}"

- name: Write unseal keys to files
  copy:
    dest: "unseal_key_{{ item.0 }}"
    content: "{{ item.1 }}"
  with_indexed_items: "{{ vault_init_parsed.unseal_keys_hex }}"
  delegate_to: localhost
  run_once: true

- name: Write root token to file
  copy:
    content: "{{ vault_init_parsed.root_token }}"
    dest: "rootkey"
  delegate_to: localhost
  run_once: true

- name: Add env vars for root for convenience
  blockinfile:
    path: "/root/.bashrc"
    block: |
      export VAULT_ADDR=http://{{ ansible_host }}:8200
      export VAULT_TOKEN={{ vault_init_parsed.root_token }}

- name: Reading unseal key contents
  shell: "cat {{ item }}"
  register: _vault_unseal_keys
  with_fileglob: unseal_key_*
  delegate_to: localhost
  run_once: true

- name: Unseal Vault with unseal keys
  shell: "vault operator unseal {{ item.stdout }}"
  with_items: "{{ _vault_unseal_keys.results }}"

- name: Enable pki secrets engine
  shell: vault secrets enable pki
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Tune pki secrets engine
  shell: vault secrets tune -max-lease-ttl=87600h pki
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Generate Root CA certificate
  shell: vault write pki/root/generate/internal common_name="dc1.consul" ttl=87600h
  register: root_ca
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Update the CRL location and issuing certificates
  shell: |
    vault write pki/config/urls \
      issuing_certificates="http://127.0.0.1:8200/v1/pki/ca" \
      crl_distribution_points="http://127.0.0.1:8200/v1/pki/crl"
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Generate an intermediate CA
  shell: vault secrets enable -path=pki_int pki
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Set max TTL for certs
  shell: vault secrets tune -max-lease-ttl=43800h pki_int
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Request an intermediate CSR
  shell: |
    vault write -format=json pki_int/intermediate/generate/internal \
      common_name="dc1.consul Intermediate Authority" \
      | jq -r '.data.csr' > pki_intermediate.csr
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Sign the CSR
  shell: |
    vault write -format=json pki/root/sign-intermediate csr=@pki_intermediate.csr \
      format=pem_bundle ttl="43800h" \
      | jq -r '.data.certificate' > intermediate.cert.pem
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Import the certificate into Vault
  shell: vault write pki_int/intermediate/set-signed certificate=@intermediate.cert.pem
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Create role for issuing certificates
  shell: |
    vault write pki_int/roles/consul-dc1 \
      allowed_domains=dc1.consul,service.consul,node.dc1.consul,service.dc1.consul,server.dc1.consul \
      allow_subdomains=true \
      allow_ip_sans=true \
      allow_localhost=true \
      allow_glob_domains=true \
      generate_lease=true \
      max_ttl=43800h
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Enable certificate authentication
  shell: vault auth enable cert
  environment:
    VAULT_TOKEN: "{{ vault_init_parsed.root_token }}"

- name: Create consul cert
  uri:
    url: "http://{{ play_hosts | first }}:8200/v1/pki_int/issue/consul-dc1"
    body:
      common_name: "server.dc1.consul"
      ip_sans: "127.0.0.1,{{ ansible_host }}"
      alt_names: "*.service.consul,localhost,*.node.dc1.consul,*.service.dc1.consul,*.server.dc1.consul,*.dc1.consul"
      exclude_cn_from_sans: true
      ttl: "17520h"
    body_format: json
    method: POST
    validate_certs: false
    headers:
      X-Vault-Token: "{{ vault_init_parsed.root_token }}"
  register: consul_cert
  delegate_to: localhost

- debug:
    msg: "{{ consul_cert }}"

- name: Copy Consul server certificate
  copy:
    dest: "{{ playbook_dir }}/roles/ansible-consul/files/server.crt"
    content: "{{ consul_cert.json.data.certificate }}"
    mode: '0400'
    owner: ubuntu
  run_once: true
  delegate_to: localhost

- name: Copy Consul server key
  copy:
    dest: "{{ playbook_dir }}/roles/ansible-consul/files/server.key"
    content: "{{ consul_cert.json.data.private_key }}"
    mode: '0400'
    owner: ubuntu
  run_once: true
  delegate_to: localhost

- name: Copy Consul server CA certificate
  copy:
    dest: "{{ playbook_dir }}/roles/ansible-consul/files/ca.crt"
    content: "{{ consul_cert.json.data.issuing_ca }}"
    mode: '0400'
    owner: ubuntu
  run_once: true
  delegate_to: localhost

...
